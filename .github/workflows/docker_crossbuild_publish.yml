name: Cross-Compile Docker Build and Push

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY_IMAGE: ergoplatform/oracle-core

jobs:
 build:
   runs-on: ubuntu-latest
   strategy:
     matrix:
       include:
         - platform: 'linux/amd64'
           ccarch: 'x86_64'
         - platform: 'linux/arm64'
           ccarch: 'aarch64'

   steps:
     - name: Checkout code
       uses: actions/checkout@v3

     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2

     - name: Generate Docker metadata
       id: metadata
       uses: docker/metadata-action@v4
       with:
         images: ${{ env.REGISTRY_IMAGE }}
           
     - name: Login to DockerHub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}

     - name: Build and push by digest
       id: build
       uses: docker/build-push-action@v4
       with:
         context: .
         platforms: ${{ matrix.platform }}
         labels: ${{ steps.metadata.outputs.labels }}
         outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
         build-args: |
           TARGETPLATFORM=${{ matrix.platform }}
           CCARCH=${{ matrix.ccarch }}
           
     - name: Export digest
       run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
          
     - name: Upload digest
       uses: actions/upload-artifact@v3
       with:
         name: digests
         path: /tmp/digests/*
         if-no-files-found: error
         retention-days: 1    
          
 merge:
   needs: build
   runs-on: ubuntu-latest
   steps:
     - name: Download digests
       uses: actions/download-artifact@v3
       with:
         name: digests
         path: /tmp/digests
         
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2
       
     - name: Generate Docker metadata
       id: metadata
       uses: docker/metadata-action@v4
       with:
         images: ${{ env.REGISTRY_IMAGE }}
         flavor: |
           latest=true
         
     - name: Login to DockerHub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}

     - name: Create manifest list and push
       working-directory: /tmp/digests
       run: |
         docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
           $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
     - name: Inspect image
       run: |
         docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.metadata.outputs.version }}
